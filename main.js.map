{"version":3,"sources":["./src/app/services/clients/client.service.ts","./src/app/signin/signin.component.ts","./src/app/signin/signin.component.html","fs (ignored)","crypto (ignored)","stream (ignored)","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/auth/user.service.ts","./src/environments/environment.ts","./src/app/Model/user.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/userdashboard/userdashboard.component.ts","./src/app/userdashboard/userdashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/emaildashboard/emaildashboard.component.ts","./src/app/emaildashboard/emaildashboard.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/Model/client.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Client } from 'src/app/Model/client';\nimport {HttpClient} from '@angular/common/http'\nimport { UserService } from '../auth/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  constructor(public http:HttpClient,public auth:UserService) { }\n\n\n  addClients(data:Client){\n    return this.http.post<Client>('http://localhost:8080/addclients',data);\n  }\n\n  getClients(){\n    return this.http.get<Client[]>(`http://localhost:8080/clients/${this.auth.user.userId}`)\n  }\n\n  removeClients(clientid:any){\n    return this.http.delete(`http://localhost:8080/removeclient/${clientid}`)\n  }\n\n  updateClient(data:Client){\n    return this.http.put<Client>('http://localhost:8080/updateclient',data)\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../Model/user';\nimport { UserService } from '../services/auth/user.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  existingUser:User\n  errorFlag:boolean\n  next:boolean\n  loader:boolean\n  newUser:User\n\n  constructor(public auth:UserService, public router:Router) { \n    this.existingUser=new User()\n    this.newUser = new User()\n    this.errorFlag=false\n    this.next=true\n    this.loader=false\n  }\n  ngOnInit(): void {\n  }\n\n  nexter(){\n    this.next = !this.next\n    this.errorFlag = false\n    this.ngOnInit()\n  }\n\n  signInSubmit(data:any){\n    this.loader=true\n    this.auth.signInUser(this.existingUser).subscribe((res)=>{\n      if(res){\n        this.loader=false\n        this.auth.user=res\n        this.auth.usersignedin=true\n        this.errorFlag = false\n        this.router.navigateByUrl('/dashboard')\n      }\n      else{\n        this.loader=false\n        this.errorFlag = true\n      }\n      \n    });\n  }\n\n  signUpSubmit(){\n    this.loader=true\n    this.auth.signUpUser(this.newUser).subscribe(res=>{\n      if(res){\n        this.loader=false\n        this.errorFlag=false\n        this.nexter()\n        this.router.navigateByUrl('/signin')\n      }\n      else{\n        this.loader=false\n        this.errorFlag=true\n      }\n    });\n  }\n}\n","<div class=\"spinner d-flex align-items-center justify-content-center flex-column\" *ngIf=\"loader\">\n    <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"lead text-primary mt-3\">Please Wait... It takes few Seconds</p>\n</div>\n\n<div class=\"wrapper\" *ngIf=\"!loader\">\n    <span class=\"span1\"></span>\n    <span class=\"span2\"></span>\n    <div class=\"container\">\n        <div class=\"myCard\">\n            <div *ngIf=\"next\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"myLeftCtn\">\n                        <nav class=\"nav nav-pills nav-fill\" style=\"cursor: pointer;\">\n                            <a class=\"nav-item nav-link active\" (click)=\"nexter()\">SIGN IN</a>\n                            <a class=\"nav-item nav-link\" (click)=\"nexter()\">SIGN UP</a>\n                        </nav>\n                        <form class=\"myForm text-center\" (ngSubmit)=\"signInSubmit(signindata)\" #signindata=\"ngForm\">\n                            <div class=\"form-group my-1\">\n                                <div class=\"icon\">\n                                    <i class=\"fas fa-envelope\"></i>\n                                    <input class=\"myInput\" type=\"text\" placeholder=\"Email\" id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"existingUser.userEmail\" required>\n                                </div>\n                                <small class=\"{{(email.dirty && email.invalid) ? 'text-danger' : 'transparent'}}\">Email is Required</small>\n                            </div>\n                            <div class=\"form-group my-1\">\n                                <div class=\"icon\">\n                                    <i class=\"fas fa-lock\"></i>\n                                    <input class=\"myInput\" type=\"password\" placeholder=\"Password\" id=\"password\"name=\"password\" #password=\"ngModel\" [(ngModel)]=\"existingUser.userPassword\" required>\n                                </div>\n                                <small  class=\"{{(password.dirty && password.invalid) ? 'text-danger' : 'transparent'}}\">Password is Required</small>\n                            </div>\n                            <input type=\"submit\" class=\"btn btn-primary my-2\" value=\"SIGN IN\" [disabled]=\"signindata.pristine || signindata.invalid\">\n                        </form>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"myRightCtnIn\">\n                    </div>\n                </div>\n            </div>\n            </div>\n            <div *ngIf=\"!next\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"myRightCtnReg\"></div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"myLeftCtn\">\n                        <nav class=\"nav nav-pills nav-fill\" style=\"cursor: pointer;\">\n                            <a class=\"nav-item nav-link\" (click)=\"nexter()\">SIGN IN</a>\n                            <a class=\"nav-item nav-link active\" (click)=\"nexter()\">SIGN UP</a>\n                        </nav>\n                        <form class=\"myForm text-center\" (ngSubmit)=\"signUpSubmit()\" #formdata=\"ngForm\">\n                                <div class=\"form-group my-1\">\n                                    <div class=\"icon\">\n                                        <i class=\"fas fa-user\"></i>\n                                        <input class=\"myInput\" type=\"text\" placeholder=\"Username\" id=\"username\" name=\"username\" #username=\"ngModel\" [(ngModel)]=\"newUser.userName\" required>\n                                    </div>\n                                    <small class=\"{{(username.dirty && username.invalid) ? 'text-danger' : 'transparent'}}\">Username is Required</small>\n                                </div>\n                                <div class=\"form-group my-1\">\n                                    <div class=\"icon\">\n                                        <i class=\"fas fa-envelope\"></i>\n                                        <input class=\"myInput\" type=\"text\" placeholder=\"email\" id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"newUser.userEmail\" required>\n                                    </div>\n                                    <small class=\"{{(email.dirty && email.invalid) ? 'text-danger' : 'transparent'}}\">Email is Required</small>\n                                </div>\n                                <div class=\"form-group my-1\">\n                                    <div class=\"icon\">\n                                        <i class=\"fas fa-lock\"></i>\n                                        <input class=\"myInput\" type=\"password\" placeholder=\"password\" id=\"password\" name=\"password\" #password=\"ngModel\" [(ngModel)]=\"newUser.userPassword\" required>\n                                    </div>\n                                    <small class=\"{{(password.dirty && password.invalid) ? 'text-danger' : 'transparent'}}\">Password is Required</small>\n                                </div>\n                                <input type=\"submit\" class=\"btn btn-primary my-2\" value=\"CREATE ACCOUNT\" [disabled]=\"formdata.pristine || formdata.invalid\">\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"alert alert-danger\" style=\"margin-top: 60px; text-align: center;\" role=\"alert\" *ngIf=\"errorFlag\">\n        Sign In Failed. Invalid combination of email and password.\n    </div>\n    </div>\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home\">\n    <span class=\"bg\"></span>\n    <div class=\"row h-100\">\n        <div class=\"col-lg-6 d-flex align-items-center justify-content-center\">\n            <div class=\"p-3 pb-0 d-flex align-items-center justify-content-between flex-column\" style=\"transform: translateY(50px);\">\n                <div>\n                    <p class=\" logo text-light text-center\">Smart<i class=\"fas fa-mail-bulk\"></i>er</p>\n                    <hr>\n                    <h5 class=\"text-light text-center\">Smart way to send and schedule email for Free</h5>\n                </div>\n                <a class=\"nav-link nav px-4 mt-5 mb-3\" aria-current=\"page\" routerLink=\"/signin\" routerLinkActive=\"active\">Start For Free</a>\n            </div>\n        </div>\n        <div class=\"col-lg-6 mt-5 d-flex align-items-center justify-content-center\">\n            <img src=\"../../SmartMailer/assets/email.png\" class=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { User } from 'src/app/Model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  user:User\n  usersignedin:boolean=false\n\n  constructor(public http:HttpClient) { \n    this.user=new User()\n  }\n\n  signInUser(data:User){\n    return this.http.post<User>('https://smartmailerspringboot.herokuapp.com/signin',data);\n  }\n\n  signUpUser(data:User){\n    console.log(data);\n    return this.http.post<User>('https://smartmailerspringboot.herokuapp.com/signup',data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class User{\r\n    userId:number\r\n    userName:String\r\n    userEmail:String\r\n    userPassword:String\r\n    constructor(){\r\n        this.userId=0\r\n        this.userName=''\r\n        this.userEmail=''\r\n        this.userPassword=''\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"Wrapper\">\n    <div class=\"container-fluid mt-3\">\n    <div class=\"row\">\n        <div class=\"col-lg-3 mb-2\">\n            <app-navigation></app-navigation>\n        </div>\n        <div class=\"col-lg-9\">\n            <nav>\n                <div class=\"nav nav-tabs bg-primary\" id=\"nav-tab\" role=\"tablist\">\n                  <button class=\"nav-link active text-light\" id=\"nav-home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\" type=\"button\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Add Category</button>\n                  <button class=\"nav-link text-light\" id=\"nav-profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-profile\" type=\"button\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">View Category</button>\n                  <!-- <button class=\"nav-link text-light\" id=\"nav-contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-contact\" type=\"button\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Edit</button> -->\n                </div>\n              </nav>\n              <div class=\"tab-content\" id=\"nav-tabContent\">\n                <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n                    <div class=\"row\">\n                        <h1 class=\"text-center m-2 text-primary\">Add Category</h1>\n                        <hr/>\n                        <div class=\"col-lg-6 mx-auto my-2\">\n                            <div class=\"input-group\">\n                                <span class=\"input-group-text\">Name</span>\n                                <input type=\"text\" class=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n                    <div class=\"row\">\n                        <h1 class=\"text-center m-2 text-primary\">Bulk Add Users</h1>\n                        <hr/>\n                        <div class=\"col-lg-6 mx-auto my-2\">\n                            <div class=\"input-group\">\n                                <span class=\"input-group-text\">Import a Excel</span>\n                                <input type=\"file\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" disabled>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h1 class=\"text-center text-primary m-5 p-5\">Coming Soon</h1>\n                    <!-- <form (ngSubmit)=\"addClients()\" #clientdata=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 lister p-3 mx-auto my-3\">\n                            <div class=\"input-group m-2\" *ngFor=\"let c of userlist; let i = index\">\n                                <div class=\"row w-100\">\n                                    <div class=\"col-lg-5\">\n                                        <input type=\"text\" placeholder=\"Name\" class=\"form-control\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"clients[i].clientName\" required>\n                                    </div>\n                                    <div class=\"col-lg-5\">\n                                        <input type=\"email\" placeholder=\"Email\" class=\"form-control\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"clients[i].clientEmail\" required>\n                                    </div>\n                                    <div class=\"col-lg-2\">\n                                        <select class=\"form-select btn btn-primary text-light\" name=\"category\" #category=\"ngModel\" [(ngModel)]=\"clients[i].clientCategory\" required>\n                                            <option value=\"default\" selected>Default</option>\n                                            <option value=\"1\">One</option>\n                                        </select>\n                                    </div>\n                                </div>\n                              </div>\n                        </div>\n                    </div>\n                    <div class=\"w-100 d-flex align-items-center justify-content-center\">\n                        <button class=\"btn btn-outline-primary mx-auto\" type=\"submit\" id=\"button-addon2\" [disabled]=\"clientdata.pristine || clientdata.invalid\">Add Users</button>\n                    </div>\n                </form> -->\n                </div>\n        </div>\n    </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userdashboard',\n  templateUrl: './userdashboard.component.html',\n  styleUrls: ['./userdashboard.component.css']\n})\nexport class UserdashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>userdashboard works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sm';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http'\nimport {FormsModule} from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { EmaildashboardComponent } from './emaildashboard/emaildashboard.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { UserdashboardComponent } from './userdashboard/userdashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    SigninComponent,\n    EmaildashboardComponent,\n    NavigationComponent,\n    CategoriesComponent,\n    UserdashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Client } from '../Model/client';\nimport { UserService } from '../services/auth/user.service';\nimport { ClientService } from '../services/clients/client.service';\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-emaildashboard',\n  templateUrl: './emaildashboard.component.html',\n  styleUrls: ['./emaildashboard.component.css']\n})\nexport class EmaildashboardComponent implements OnInit {\n\n  count:number=0\n  loader:boolean\n  userlist:[] = []\n  clients:Array<Client> = []\n  bulkclients:Array<Client> =[]\n  clientslist:Array<Client> = []\n  client:Client\n  data:[][] = []\n\n  constructor(public clientservice:ClientService,public auth:UserService,public router:Router) {\n    this.client=new Client()\n    this.loader=false\n   }\n\n  ngOnInit(): void {\n    if(this.auth.user.userId===0){\n      this.router.navigateByUrl('/signin')\n    }\n    this.clientservice.getClients().subscribe(\n      res=>this.clientslist=res\n    )\n  }\n\n  counter(i: any) {\n    this.userlist.length=i\n    this.clients.length=0\n    for(let j=0;j<i;j++){\n      this.clients[j] = new Client()\n    }\n}\naddClients(){\n  this.loader=true\n  let count=0\n  for(let c of this.clients){\n    c.userId=this.auth.user.userId\n    this.clientservice.addClients(c).subscribe(\n      res=>{\n        console.log(res)\n        count++\n        if(count===this.userlist.length){\n          this.clients.length=0\n          this.counter(0)\n          this.count=0\n          this.loader=false\n          this.ngOnInit()\n        }\n      }\n    )\n  }\n}\naddClientsexcel(){\n  this.loader=true\n  let count=0\n  for(let c of this.bulkclients){\n    c.userId=this.auth.user.userId\n    this.clientservice.addClients(c).subscribe(\n      res=>{\n        console.log(res)\n        count++\n        if(count===this.bulkclients.length){\n          this.bulkclients.length=0\n          this.loader=false\n          this.ngOnInit()\n        }\n      }\n    )\n  }\n}\nremove(id:any){\n  this.loader=true\n    this.clientservice.removeClients(id).subscribe(\n      res=>{\n        this.ngOnInit()\n        this.loader=false\n      }\n    )\n}\nupdateClient(id:any){\n  this.loader=true\n  this.client.clientId=id\n  this.client.userId=this.auth.user.userId\n  this.clientservice.updateClient(this.client).subscribe(\n    res=>{\n      this.ngOnInit()\n      this.loader=false\n    }\n  )\n}\n\nfileImport(evt:any){\n  const target:DataTransfer = <DataTransfer>(evt.target)\n  const reader:FileReader = new FileReader()\n\n  reader.onload = (e:any)=>{\n    const bstr:string = e.target.result\n    const wb:XLSX.WorkBook = XLSX.read(bstr,{type:'binary'})\n    const wsname:string=wb.SheetNames[0]\n    const ws:XLSX.WorkSheet=wb.Sheets[wsname]\n    this.data=(XLSX.utils.sheet_to_json(ws,{header: 1}))\n    this.data.splice(0,1)\n    for(let i=0;i<this.data.length;i++){\n      let clientdata:Client=new Client()\n      for(let j=0;j<this.data[i].length;j++){\n        if(this.data[i].length-1===2){\n          if(this.data[i].length-j===3)\n            clientdata.clientName=this.data[i][j] || ''\n          else if(this.data[i].length-j===2)\n            clientdata.clientEmail=this.data[i][j] || ''\n          else if(this.data[i].length-j===1)\n            clientdata.clientCategory=this.data[i][j] || ''\n        }\n        else if(this.data[i].length-1===1){\n          if(this.data[i].length-j===2)\n            clientdata.clientName=this.data[i][j] || ''\n          else if(this.data[i].length-j===1)\n            clientdata.clientEmail=this.data[i][j] || ''\n        }\n      }\n      this.bulkclients.push(clientdata)\n    }\n  }\n  reader.readAsBinaryString(target.files[0])\n}\n}\n\n","<div class=\"spinner d-flex align-items-center justify-content-center flex-column\" *ngIf=\"loader\">\n    <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <p class=\"lead text-primary mt-3\">Please Wait... It takes few Seconds</p>\n</div>\n<!-- Modal -->\n  <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title text-primary\" id=\"staticBackdropLabel\">Important</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body lead text-dark\">\n          Columns of Excel file Should be like Name, Email, Category(Optional)\n        </div>\n        <div class=\"modal-footer d-flex align-items-center justify-content-around\">\n          <button type=\"button\" class=\"btn btn-danger w-25\" data-bs-dismiss=\"modal\">Close</button>\n          <input type=\"file\" class=\"btn btn-success form-control w-25\" (change)=\"fileImport($event)\" multiple=\"false\" accept=\".xls,.xlsx\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" multiple=\"false\">\n        </div>\n      </div>\n    </div>\n  </div>\n<div class=\"Wrapper\">\n    <div class=\"container-fluid mt-3\">\n    <div class=\"row\">\n        <div class=\"col-lg-3 mb-2\">\n            <app-navigation></app-navigation>\n        </div>\n        <div class=\"col-lg-9\">\n            <nav>\n                <div class=\"nav nav-tabs bg-primary\" id=\"nav-tab\" role=\"tablist\">\n                  <button class=\"nav-link active text-light\" id=\"nav-home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\" type=\"button\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Add</button>\n                  <button class=\"nav-link text-light\" id=\"nav-profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-profile\" type=\"button\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Bulk Add</button>\n                  <button class=\"nav-link text-light\" id=\"nav-contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-contact\" type=\"button\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Edit</button>\n                </div>\n              </nav>\n              <div class=\"tab-content\" id=\"nav-tabContent\">\n                <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n                    <div class=\"row\">\n                        <h1 class=\"text-center m-2 text-primary\">Add Users</h1>\n                        <hr/>\n                        <div class=\"col-lg-6 mx-auto my-2\">\n                            <div class=\"input-group\">\n                                <span class=\"input-group-text\">No of Users</span>\n                                <input type=\"text\" class=\"form-control\" name=\"users\" #users=\"ngModel\" [(ngModel)]=\"count\" (ngModelChange)=\"counter(count)\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\n                            </div>\n                        </div>\n                    </div>\n                    <form (ngSubmit)=\"addClients()\" #clientdata=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 lister p-3 mx-auto my-3\">\n                            <div class=\"input-group m-2\" *ngFor=\"let c of userlist; let i = index\">\n                                <div class=\"row w-100\">\n                                    <div class=\"col-lg-5\">\n                                        <input type=\"text\" placeholder=\"Name\" class=\"form-control\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"clients[i].clientName\" required>\n                                    </div>\n                                    <div class=\"col-lg-5\">\n                                        <input type=\"email\" placeholder=\"Email\" class=\"form-control\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"clients[i].clientEmail\" required>\n                                    </div>\n                                    <div class=\"col-lg-2\">\n                                        <select class=\"form-select btn btn-primary text-light\" name=\"category\" #category=\"ngModel\" [(ngModel)]=\"clients[i].clientCategory\" required>\n                                            <option value=\"default\" selected>Default</option>\n                                            <option value=\"1\">One</option>\n                                        </select>\n                                    </div>\n                                </div>\n                              </div>\n                        </div>\n                    </div>\n                    <div class=\"w-100 d-flex align-items-center justify-content-center\">\n                        <button class=\"btn btn-outline-primary mx-auto\" type=\"submit\" id=\"button-addon2\" [disabled]=\"clientdata.pristine || clientdata.invalid\">Add Users</button>\n                    </div>\n                </form>\n                </div>\n                <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n                    <div class=\"row\">\n                        <h1 class=\"text-center m-2 text-primary\">Bulk Add Users</h1>\n                        <hr/>\n                        <div class=\"col-lg-6 mx-auto my-2\">\n                            <div class=\"input-group\">\n                                <input type=\"button\" class=\"btn btn-primary form-control\" value=\"Import a Excel\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" multiple=\"false\">\n                            </div>\n                        </div>\n                    </div>\n                    <form (ngSubmit)=\"addClientsexcel()\" #clientdataexcel=\"ngForm\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 lister p-3 mx-auto my-3\">\n                            <div class=\"input-group m-2\" *ngFor=\"let c of bulkclients; let i = index\">\n                                <div class=\"row w-100\">\n                                    <div class=\"col-lg-5\">\n                                        <input type=\"text\" placeholder=\"Name\" class=\"form-control\" name=\"name{{i}}\" ngModel [(ngModel)]=\"bulkclients[i].clientName\" required>\n                                    </div>\n                                    <div class=\"col-lg-5\">\n                                        <input type=\"email\" placeholder=\"Email\" class=\"form-control\" name=\"email{{i}}\" ngModel [(ngModel)]=\"bulkclients[i].clientEmail\" required>\n                                    </div>\n                                    <div class=\"col-lg-2\">\n                                        <select class=\"form-select btn btn-primary text-light\" name=\"category{{i}}\" ngModel [(ngModel)]=\"bulkclients[i].clientCategory\" required>\n                                            <option [value]=\"bulkclients[i].clientCategory || 'default'\" selected>Default</option>\n                                            <option value=\"1\">One</option>\n                                        </select>\n                                    </div>\n                                </div>\n                              </div>\n                        </div>\n                    </div>\n                    <div class=\"w-100 d-flex align-items-center justify-content-center\">\n                        <button class=\"btn btn-outline-primary mx-auto\" type=\"submit\">Add Users</button>\n                    </div>\n                </form>\n                </div>\n                <div class=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">\n                    <div class=\"row\">\n                        <h1 class=\"text-center m-2 text-primary\">Edit Users</h1>\n                        <hr/>\n                        <div class=\"wrap\">\n                        <div class=\"row scroll m-2 p-2\" style=\"border-bottom: 1px solid #000;\" *ngFor=\"let c of clientslist; let i=index\">\n                            <div class=\"col-lg-3 lead p-2\">\n                                <i class=\"fas fa-user text-primary\"></i> {{c.clientName}}\n                            </div>\n                            <div class=\"col-lg-3 lead p-2\">\n                                <i class=\"fas fa-envelope text-primary\"></i> {{c.clientEmail}}\n                            </div>\n                            <div class=\"col-lg-3 lead p-2\">\n                                <i class=\"fas fa-columns text-primary\"></i> {{c.clientCategory}}\n                            </div>\n                            <div class=\"col-lg-3 d-flex align-items-center justify-content-around\">\n                                <a class=\"btn btn-success\" data-bs-toggle=\"collapse\" href=\"#c{{i}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                    <i class=\"fas fa-pen-alt\"></i>\n                                  </a>\n                                <button class=\"btn btn-danger\" (click)=\"remove(c.clientId)\"><i class=\"fas fa-trash-alt\"></i></button>\n                            </div>\n                            <div class=\"collapse\" id=\"c{{i}}\">\n                                <div class=\"card card-body\">\n                                    <div class=\"row w-100\">\n                                        <div class=\"col-lg-5\">\n                                            <input type=\"text\" placeholder=\"Name\" class=\"form-control\" name=\"name\" #name=\"ngModel\" [(ngModel)]=\"client.clientName\" required>\n                                        </div>\n                                        <div class=\"col-lg-5\">\n                                            <input type=\"email\" placeholder=\"Email\" class=\"form-control\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"client.clientEmail\" required>\n                                        </div>\n                                        <div class=\"col-lg-2\">\n                                            <select class=\"form-select btn btn-primary text-light\" name=\"category\" #category=\"ngModel\" [(ngModel)]=\"client.clientCategory\" required>\n                                                <option value=\"default\" selected>Default</option>\n                                                <option value=\"1\">One</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"w-100 d-flex align-items-center justify-content-center\">\n                                        <button class=\"btn btn-outline-primary mb-2 mt-4 mx-auto\" (click)=\"updateClient(c.clientId)\">Update</button>\n                                    </div>\n                                </div>\n                              </div>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n              </div>\n        </div>\n    </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"accordion\" id=\"accordionExample\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"headingOne\">\n        <a class=\"accordion-button btn\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n          Navbar\n        </a>\n      </h2>\n      <div id=\"collapseOne\" class=\"accordion-collapse collapse hide\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n        <div class=\"accordion-body\">\n            <div class=\"list-group\">\n                <a class=\"list-group-item list-group-item-action\" routerLink=\"/dashboard\" routerLinkActive=\"active\" aria-current=\"true\">Users Management</a>\n                <a class=\"list-group-item list-group-item-action\" routerLink=\"/categories\" routerLinkActive=\"active\">Categories</a>\n                <a class=\"list-group-item list-group-item-action\" routerLink=\"/emails\" routerLinkActive=\"active\">Email Management</a>\n            </div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand\">\n    <div class=\"container\">\n      <a class=\"navbar-brand text-primary\">Smart<i class=\"fas fa-mail-bulk\"></i>er</a>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div class=\"navbar-nav w-100 d-flex align-items-center justify-content-end\">\n          <a class=\"btn nav px-4\" aria-current=\"page\" routerLink=\"/signin\" routerLinkActive=\"active\">Start For Free</a>\n        </div>\n      </div>\n    </div>\n  </nav>\n","export class Client{\r\n    clientId:number\r\n    clientName:String\r\n    clientEmail:String\r\n    clientCategory:String\r\n    userId:number\r\n    constructor(){\r\n        this.clientId=0\r\n        this.clientName=''\r\n        this.clientEmail=''\r\n        this.clientCategory='default'\r\n        this.userId=0\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { EmaildashboardComponent } from './emaildashboard/emaildashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { UserdashboardComponent } from './userdashboard/userdashboard.component';\n\nconst routes: Routes = [\n    {path:'',component:HomeComponent,pathMatch:'full'},\n    {path:'signin',component:SigninComponent},\n    {path:'dashboard',component:EmaildashboardComponent},\n    {path:'categories',component:CategoriesComponent},\n    {path:'emails',component:UserdashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}