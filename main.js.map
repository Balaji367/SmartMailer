{"version":3,"sources":["./src/app/signin/signin.component.ts","./src/app/signin/signin.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/auth/user.service.ts","./src/environments/environment.ts","./src/app/Model/user.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/emaildashboard/emaildashboard.component.ts","./src/app/emaildashboard/emaildashboard.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../Model/user';\nimport { UserService } from '../services/auth/user.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  existingUser:User\n  errorFlag:boolean\n  next:boolean\n  loader:boolean\n  newUser:User\n\n  constructor(public auth:UserService, public router:Router) { \n    this.existingUser=new User()\n    this.newUser = new User()\n    this.errorFlag=false\n    this.next=true\n    this.loader=false\n  }\n  ngOnInit(): void {\n  }\n\n  nexter(){\n    this.next = !this.next\n  }\n\n  signInSubmit(){\n    this.loader=true\n    this.auth.signInUser(this.existingUser).subscribe((res)=>{\n      if(res){\n        this.loader=false\n        this.auth.user=res\n        this.auth.usersignedin=true\n        this.errorFlag = false\n        this.router.navigateByUrl('/dashboard')\n      }\n      else{\n        this.errorFlag = true\n      }\n      \n    });\n  }\n\n  signUpSubmit(){\n    this.loader=true\n    this.auth.signUpUser(this.newUser).subscribe(res=>{\n      if(res){\n        this.loader=false\n        this.errorFlag=false\n        this.nexter()\n        this.router.navigateByUrl('/signin')\n      }\n      else{\n        this.errorFlag=true\n      }\n    });\n  }\n}\n","<div class=\"spinner d-flex align-items-center justify-content-center\" *ngIf=\"loader\">\n    <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n</div>\n\n<div class=\"wrapper\" *ngIf=\"!loader\">\n    <span class=\"span1\"></span>\n    <span class=\"span2\"></span>\n    <div class=\"container\">\n        <div class=\"myCard\">\n            <div *ngIf=\"next\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"myLeftCtn\">\n                        <nav class=\"nav nav-pills nav-fill\" style=\"cursor: pointer;\">\n                            <a class=\"nav-item nav-link active\" (click)=\"nexter()\">SIGN IN</a>\n                            <a class=\"nav-item nav-link\" (click)=\"nexter()\">SIGN UP</a>\n                        </nav>\n                        <form class=\"myForm text-center\" (ngSubmit)=\"signInSubmit()\" #signindata=\"ngForm\">\n                            <div class=\"form-group my-1\">\n                                <div>\n                                    <i class=\"fas fa-envelope\"></i>\n                                    <input class=\"myInput\" type=\"text\" placeholder=\"Email\" id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"existingUser.userEmail\" required>\n                                </div>\n                                <small class=\"{{(email.dirty && email.invalid) ? 'text-danger' : 'transparent'}}\">Email is Required</small>\n                            </div>\n                            <div class=\"form-group my-1\">\n                                <div>\n                                    <i class=\"fas fa-lock\"></i>\n                                    <input class=\"myInput\" type=\"password\" placeholder=\"Password\" id=\"password\"name=\"password\" #password=\"ngModel\" [(ngModel)]=\"existingUser.userPassword\" required>\n                                </div>\n                                <small  class=\"{{(password.dirty && password.invalid) ? 'text-danger' : 'transparent'}}\">Password is Required</small>\n                            </div>\n                            <input type=\"submit\" class=\"btn btn-primary my-2\" value=\"SIGN IN\" [disabled]=\"signindata.pristine || signindata.invalid\">\n                        </form>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"myRightCtnIn\">\n                    </div>\n                </div>\n            </div>\n            </div>\n            <div *ngIf=\"!next\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"myRightCtnReg\"></div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"myLeftCtn\">\n                        <nav class=\"nav nav-pills nav-fill\" style=\"cursor: pointer;\">\n                            <a class=\"nav-item nav-link\" (click)=\"nexter()\">SIGN IN</a>\n                            <a class=\"nav-item nav-link active\" (click)=\"nexter()\">SIGN UP</a>\n                        </nav>\n                        <form class=\"myForm text-center\" (ngSubmit)=\"signUpSubmit()\" #formdata=\"ngForm\">\n                                <div class=\"form-group my-1\">\n                                    <i class=\"fas fa-user\"></i>\n                                    <input class=\"myInput\" type=\"text\" placeholder=\"Username\" id=\"username\" name=\"username\" #username=\"ngModel\" [(ngModel)]=\"newUser.userName\" required>\n                                    <small class=\"{{(username.dirty && username.invalid) ? 'text-danger' : 'transparent'}}\">Username is Required</small>\n                                </div>\n                                <div class=\"form-group my-1\">\n                                    <i class=\"fas fa-envelope\"></i>\n                                    <input class=\"myInput\" type=\"text\" placeholder=\"email\" id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"newUser.userEmail\" required>\n                                    <small class=\"{{(email.dirty && email.invalid) ? 'text-danger' : 'transparent'}}\">Email is Required</small>\n                                </div>\n                                <div class=\"form-group my-1\">\n                                    <i class=\"fas fa-lock\"></i>\n                                    <input class=\"myInput\" type=\"password\" placeholder=\"password\" id=\"password\" name=\"password\" #password=\"ngModel\" [(ngModel)]=\"newUser.userPassword\" required>\n                                    <small class=\"{{(password.dirty && password.invalid) ? 'text-danger' : 'transparent'}}\">Password is Required</small>\n                                </div>\n                                <input type=\"submit\" class=\"btn btn-primary my-2\" value=\"CREATE ACCOUNT\" [disabled]=\"formdata.pristine || formdata.invalid\">\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"alert alert-danger\" style=\"margin-top: 60px; text-align: center;\" role=\"alert\" *ngIf=\"errorFlag\">\n        Sign In Failed. Invalid combination of email and password.\n    </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home\">\n    <span class=\"bg\"></span>\n    <div class=\"row h-100\">\n        <div class=\"col-lg-6 d-flex align-items-center justify-content-center\">\n            <div class=\"p-3 pb-0 d-flex align-items-center justify-content-between flex-column\" style=\"transform: translateY(50px);\">\n                <div>\n                    <p class=\" logo text-light text-center\">Smart<i class=\"fas fa-mail-bulk\"></i>er</p>\n                    <hr>\n                    <h5 class=\"text-light text-center\">Smart way to send and schedule email for Free</h5>\n                </div>\n                <a class=\"nav-link nav px-4 mt-5\" aria-current=\"page\" routerLink=\"/signin\" routerLinkActive=\"active\">Start For Free</a>\n            </div>\n        </div>\n        <div class=\"col-lg-6 d-flex align-items-center justify-content-center\">\n            <img src=\"../../assets/email.png\" class=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { User } from 'src/app/Model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  user:User\n  usersignedin:boolean=false\n\n  constructor(public http:HttpClient) { \n    this.user=new User()\n  }\n\n  signInUser(data:User){\n    return this.http.post<User>('https://smartmailerspringboot.herokuapp.com/signin',data);\n  }\n\n  signUpUser(data:User){\n    console.log(data);\n    return this.http.post<User>('https://smartmailerspringboot.herokuapp.com/signup',data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class User{\r\n    userId:number\r\n    userName:String\r\n    userEmail:String\r\n    userPassword:String\r\n    constructor(){\r\n        this.userId=0\r\n        this.userName=''\r\n        this.userEmail=''\r\n        this.userPassword=''\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sm';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { EmaildashboardComponent } from './emaildashboard/emaildashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    SigninComponent,\n    EmaildashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-emaildashboard',\n  templateUrl: './emaildashboard.component.html',\n  styleUrls: ['./emaildashboard.component.css']\n})\nexport class EmaildashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper d-flex align-items-center justify-content-center\">\n    <h1 class=\"text-primary\">Under Development</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg\">\n    <div class=\"container\">\n      <a class=\"navbar-brand text-primary\">Smart<i class=\"fas fa-mail-bulk\"></i>er</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div class=\"navbar-nav w-100 d-flex align-items-center justify-content-end\">\n          <a class=\"btn nav px-4\" aria-current=\"page\" routerLink=\"/signin\" routerLinkActive=\"active\">Start For Free</a>\n        </div>\n      </div>\n    </div>\n  </nav>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmaildashboardComponent } from './emaildashboard/emaildashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { SigninComponent } from './signin/signin.component';\n\nconst routes: Routes = [\n    {path:'',component:HomeComponent,pathMatch:'full'},\n    {path:'signin',component:SigninComponent},\n    {path:'dashboard',component:EmaildashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}